饿汉式单例：在类加载的时候就初始化并创建单例对象
优点：没有加任何锁，线程安全，执行效率高
缺点：在类加载的时候就会初始化，创建对象，不管用不用，都会占用资源。

懒汉式单例：在被外部调用的时候，创建单例对象。
优点：在被外部调用的时候，才创建对象，节省内存空间。
缺点：存在线程安全问题，通过添加锁的方式解决。

简单的懒汉单例：在获取实例方法上添加锁
优点：保证线程安全，且在被调用的时候才创建对象，节省空间
缺点：锁的是方法，在 高并发的情况下，会造成整个类的线程阻塞，影响性能。

双重校验锁单例：在获取实例的方法里添加锁并在所前后进行判断
优点：保证线程安全，避免整个类的阻塞
缺点：重排序可能会导致创建出多个实例，需要使用volatile来进行避免

静态内部类：
优点：不添加锁，且线程安全，兼顾饿汉式的内存浪费，也兼顾synchronized性能问题。

注册式单例：
注册式单例又称为登记式单例，就是将每个实例都登记到某个地方，使用唯一的标识符来获取实例。注册式单例有两种写法，一是为容器缓存，一种为枚举式登记
枚举式单例：
优点：优雅的防止了反射和反序列化破坏单例
容器缓存式单例：
优点：可以统一管理多个需要单例的对象
缺点：存在线程安全问题

hreadLocal线程单例：
优点：保证在每个线程中都是单例对象，天生线程安全
缺点：全局对象不唯一